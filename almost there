#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

struct stats {
    int total_yards;
    int total_passing_yards;
    int total_running_yards;
    int first_downs;
};

int yard;
int yards_gained;

int down = 1;

int team_score;
int opponent_score;

int start_game();
void drive();
int starting_yardline();
void yard_converter();
void run_play();

void defense_sim();

void end_game();

//plays
void short_pass();
void long_pass();
void inside_run();
void outside_run();
int punt();
int field_goal();

int main() {
   // struct stats total_stats;
    char *team_name[20];

    if (start_game(team_name) == 0) {
        drive();
    } else {
        defense_sim();
    }

        drive();
        defense_sim();
        drive();
        defense_sim();

    end_game();

    return 0;
}

int start_game(char *team_name) {
    srand(time(NULL));
    char coin_choice[1];
    int coin_number;
    int coin_outcome = rand() % 2;
    char kickoff_choice[1];
    printf("Welcome to the NFL Game Simulator!\nPlease enter your team's name, up to 20 characters: ");
    scanf("%s", team_name);
    if (strcmp(team_name, "Patriots") == 0) {
        printf("You have been disqualified for cheating.");
        exit(0);
    } else if (strcmp(team_name, "patriots") == 0) {
        printf("You have been disqualified for cheating.");
        exit(0);
    } else if (strcmp(team_name, "Pats") == 0) {
        printf("You have been disqualified for cheating.");
        exit(0);
    } else if(strcmp(team_name, "pats") == 0) {
        printf("You have been disqualified for cheating.");
        exit(0);
    }
    printf("\nThe game is about to start and it's time for the coin toss!\nWould %s like to pick heads (h) or tails (t)? ", team_name);
    scanf("%s", coin_choice);



    if (coin_choice[0] == 'h') {
        coin_number = 0;
    } else if (coin_choice[0] == 't') {
        coin_number = 1;
    } else {
        puts("\nInvalid input, heads selected by default.\n");
    }

    if (coin_outcome == coin_number) {
        printf("%s won the coin toss!\nWould %s like to receive (r) or kick (k)? ", team_name, team_name);
        scanf("%s", kickoff_choice);
        switch(kickoff_choice[0]) {
            case 'k':
                //printf("%s has elected to kick, so %s will receive the ball at the beginning of the 2nd half.\n", team_name, team_name);
                printf("Get ready for the kickoff!\n");
                return 1;
            default:
                printf("%s has elected to receive.\nGet ready for the kickoff!\n", team_name);
                return 0;
        }
    } else {
        printf("%s lost the coin toss.\nThe other team will receive the kickoff.", team_name);
        return 1;
    }

}

void yard_converter() {

    if (yard > 0 && yard < 50) {
        printf("\nThe ball is on your own %d-yard-line.", yard);
    } else if (yard > 50 && yard < 100) {
        printf("\nThe ball is on the opponent's %d-yard-line.", 100 - yard);
    } else if (yard == 50) {
        printf("\nThe ball is on the %d-yard-line.", yard);
    }

}

void drive() {
    yard = starting_yardline();

    yard_converter();

    //int original_yard = yard;
    //int new_yard;
    int yards_left = 0;

    //calculate down and yards left
    //down
    do {
        run_play();

        yard += yards_gained;
//        yards_left = 10 - yards_gained;
//        yards_left - yards_gained;
        if (down == 1) {

            yards_left = 10;
            yards_left = yards_left - yards_gained;

        } else if (down == 2 || down == 3 || down == 4) {

            yards_left = yards_left - yards_gained;

        }
        if (yard >= 100) {
            printf("\nYour team has scored a touchdown!\n");
            team_score += 7;
            printf("\nYour team now has %d points!", team_score);
            printf("\nThe opposing team has %d points.\n", opponent_score);
            return 0;
        }

        else if ( yards_left > 0) {
            down++;
            printf("\nIt is now down %d and %d\n", down, yards_left);
            yard_converter();

        } else {
            down = 1;
            yards_left = 0;
            printf("\nYou have earned a first down! It is now first and 10\n");
            yard_converter();
        }
    } while (down == 1 || down == 2 || down == 3 || down == 4);

    if (down == 5) {

        punt();
    }

}

int starting_yardline() {
    return rand() % 100 + 1;
}

void run_play() {
    char play_selection = 's';

    printf("\nSelect a play from the following list: \n");

    if (down == 1 || down == 2 || down == 3) {
        puts("\nShort pass - S, Long pass - L, Inside run - I, Outside run - O");
        printf("\nPlay selection: ");
        scanf("%s", &play_selection);
        switch(play_selection) {
            case 'S':
                short_pass();
                break;
            case 'L':
                long_pass();
                break;
            case 'I':
                inside_run();
                break;
            case 'O':
                outside_run();
                break;
            default:
                puts("\nInvalid input type");//error message, try again
        }
    } else if (down == 4) {
        if (yard < 55) {
            printf("\nShort pass - S, Long pass - L, Inside run - I, Outside run - O, Punt - P");
            printf("\nPlay selection: ");
            scanf("%s", &play_selection);
            switch(play_selection) {
                case 'S':
                    short_pass();
                    break;
                case 'L':
                    long_pass();
                    break;
                case 'I':
                    inside_run();
                    break;
                case 'O':
                    outside_run();
                    break;
                case 'P':
                    punt();
                    break;
                default:
                    puts("\nInvalid input type");//error message, try again
            }
        } else if (yard >= 55) {
            printf("\nShort pass - S, Long pass - L, Inside run - I, Outside run - O, Field goal - F, Punt - P");
            printf("\nPlay selection: ");
            scanf("%s", &play_selection);
            switch(play_selection) {
                case 'S':
                    short_pass();
                    break;
                case 'L':
                    long_pass();
                    break;
                case 'I':
                    inside_run();
                    break;
                case 'O':
                    outside_run();
                    break;
                case 'F':
                    field_goal(yard);
                    break;
                case 'P':
                    punt();
                    break;
                default:
                    puts("\nInvalid input type");//error message, try again
            }
        }
    }
}

void defense_sim() {

    int result;
    int score;

    result = rand() % 100 + 1;

    if (result <= 50) {
        score = rand() % 100 + 1;

            if( score <= 35 ) {
                puts("\nThe opposing team has scored a touchdown! :(");
                opponent_score += 7;
            }
            else {
                puts ("\nThe opposing team has scored a field goal! :/");
                opponent_score += 3;
                printf("\nThe opposing team now has %d points.", opponent_score);
                printf("\nYour team has %d points.\n\n", team_score);

            }
    } else {
        puts ("\nThe opposing team has elected to punt! :)");
        punt();
    }

}

void short_pass() {

    int attempt;
    int gain;

    attempt = rand() % 100 + 1;

    if (attempt <= 70) {
        gain = rand() % 100 + 1;

            if ( gain <= 5 ) {
                yards_gained = 1;
                }
            else if ( 6 <= gain && gain <= 15 ) {
                yards_gained = 2;

                }
            else if ( 16 <= gain && gain <= 40 ) {
                yards_gained = 3;

                }
            else if ( 41 <= gain && gain <= 60 ) {
                yards_gained = 4;

                }
            else if ( 61 <= gain && gain <= 70 ) {
                yards_gained = 5;

                }
            else if ( 71 <= gain && gain <= 80 ) {
                yards_gained = 6;

                }
            else if ( 81 <= gain && gain <= 85 ) {
                yards_gained = 7;

                }
            else if ( 86 <= gain && gain <= 90 ) {
                yards_gained = 8;

                }
            else if ( 91 <= gain && gain <= 93 ) {
                yards_gained = 9;

                }
            else if ( 94 <= gain && gain <= 96) {
                yards_gained = 10;

                }
            else if ( 97 <= gain && gain <= 98) {
                yards_gained = 15;

                }
            else if (gain == 99) {
                yards_gained = 25;

                }
            else {
                yards_gained = 100;

            }
            printf("You have gained %d yards!", yards_gained);
        }
     else {
        puts("The pass fell incomplete!");
        yards_gained = 0;
    }
}

void long_pass() {

    int attempt;
    int gain;

    attempt = rand() % 100 + 1;

    if (attempt <= 40) {
        gain = rand() % 100 + 1;

            if ( gain <= 5 ) {
                yards_gained = 5;

                }
            else if ( 6 <= gain && gain <= 15 ) {
                yards_gained = 7;

                }
            else if ( 16 <= gain && gain <= 40 ) {
                yards_gained = 8;

                }
            else if ( 41 <= gain && gain <= 60 ) {
                yards_gained = 10;

                }
            else if ( 61 <= gain && gain <= 70 ) {
                yards_gained = 12;

                }
            else if ( 71 <= gain && gain <= 80 ) {
                yards_gained = 15;

                }
            else if ( 81 <= gain && gain <= 85 ) {
                yards_gained = 20;

                }
            else if ( 86 <= gain && gain <= 90 ) {
                yards_gained = 25;

                }
            else if ( 91 <= gain && gain <= 93 ) {
                yards_gained = 35;

                }
            else if ( 94 <= gain && gain <= 96) {
                yards_gained = 50;

                }
            else if ( 97 <= gain && gain <= 98) {
                yards_gained = 60;

                }
            else if (gain == 99) {
                yards_gained = 75;

                }
            else {
                yards_gained = 100;

            }
            printf("You have gained %d yards!", yards_gained);
        }
     else {
        puts("The pass fell incomplete!");
    }
}

void inside_run() {

    int gain;

    gain = rand() % 100 + 1;

    if ( gain <= 5 ) {
        yards_gained = 1;

    }
    else if ( 6 <= gain && gain <= 15 ) {
        yards_gained = 2;

    }
    else if ( 16 <= gain && gain <= 40 ) {
        yards_gained = 3;

    }
    else if ( 41 <= gain && gain <= 60 ) {
        yards_gained = 4;

    }
    else if ( 61 <= gain && gain <= 70 ) {
        yards_gained = 5;

    }
    else if ( 71 <= gain && gain <= 80 ) {
        yards_gained = 6;

    }
    else if ( 81 <= gain && gain <= 85 ) {
        yards_gained = 7;

    }
    else if ( 86 <= gain && gain <= 90 ) {
        yards_gained = 8;

    }
    else if ( 91 <= gain && gain <= 93 ) {
        yards_gained = 9;

        }
    else if ( 94 <= gain && gain <= 96) {
        yards_gained = 10;

    }
    else if ( 97 <= gain && gain <= 98) {
        yards_gained = 15;

    }
    else if (gain == 99) {
        yards_gained = 25;

    }
    else {
        yards_gained = 100;

    }
    printf("You have gained %d yards!", yards_gained);
}

void outside_run() {

    int gain;

    gain = rand() % 100 + 1;

    if ( gain <= 5 ) {
        yards_gained = 1;

    }
    else if ( 6 <= gain && gain <= 15 ) {
        yards_gained = 2;

    }
    else if ( 16 <= gain && gain <= 40 ) {
        yards_gained = 3;

    }
    else if ( 41 <= gain && gain <= 60 ) {
        yards_gained = 4;

    }
    else if ( 61 <= gain && gain <= 70 ) {
        yards_gained = 5;

    }
    else if ( 71 <= gain && gain <= 80 ) {
        yards_gained = 6;

    }
    else if ( 81 <= gain && gain <= 85 ) {
        yards_gained = 7;

    }
    else if ( 86 <= gain && gain <= 90 ) {
        yards_gained = 8;

    }
    else if ( 91 <= gain && gain <= 93 ) {
        yards_gained = 9;

        }
    else if ( 94 <= gain && gain <= 96) {
        yards_gained = 10;

    }
    else if ( 97 <= gain && gain <= 98) {
        yards_gained = 15;

    }
    else if (gain == 99) {
        yards_gained = 25;

    }
    else {
        yards_gained = 100;

    }
    printf("You have gained %d yards!", yards_gained);
}

int punt() {

    int yards;
    int yards_punted;

    yards = rand() % 100 + 1;

            if ( yards <= 5 ) {
                yards_punted = 55;
                return yards_punted;
                }
            else if ( 6 <= yards && yards <= 15 ) {
                yards_punted = 50;
                return yards_punted;
                }
            else if ( 16 <= yards && yards <= 40 ) {
                yards_punted = 45;
                return yards_punted;
                }
            else if ( 41 <= yards && yards <= 60 ) {
                yards_punted = 40;
                return yards_punted;
                }
            else if ( 61 <= yards && yards <= 70 ) {
                yards_punted = 35;
                return yards_punted;
                }
            else if ( 71 <= yards && yards <= 80 ) {
                yards_punted = 30;
                return yards_punted;
                }
            else if ( 81 <= yards && yards <= 85 ) {
                yards_punted = 25;
                return yards_punted;
                }
            else if ( 86 <= yards && yards <= 90 ) {
                yards_punted = 22;
                return yards_punted;
                }
            else if ( 91 <= yards && yards <= 93 ) {
                yards_punted = 20;
                return yards_punted;
                }
            else if ( 94 <= yards && yards <= 96) {
                yards_punted = 18;
                return yards_punted;
                }
            else if ( 97 <= yards && yards <= 98) {
                yards_punted = 15;
                return yards_punted;
                }
            else if (yards == 99) {
                yards_punted = 10;
                return yards_punted;
                }
            else {
                yards_punted = 5;
                return yards_punted;
            }
}

int field_goal() {

    int attempt;
    int result;

    if (yard >= 90) {
        attempt = rand() % 100 + 1;
        if (attempt <= 95) {
            team_score += 3;
        }
        else {
            result = 0;
        }
        return result;
    }
    else if (89 >= yard && yard >= 80) {
        attempt = rand() % 100 + 1;
        if (attempt <= 85) {
            team_score += 3;
        }
        else {
            result = 0;
        }
        return result;
    }
    else if (79 >= yard && yard >= 70) {
        attempt = rand() % 100 + 1;
        if (attempt <= 75) {
            team_score += 3;
        }
        else {
            result = 0;
        }
        return result;
    }
    else if (69 >= yard && yard >= 60) {
        attempt = rand() % 100 + 1;
        if (attempt <= 55) {
            team_score += 3;
        }
        else {
            result = 0;
        }
        return result;
    }
    else {
        attempt = rand() % 100 + 1;
        if (attempt <= 20) {
            team_score += 3;
        }
        else {
            result = 0;
        }
        return result;
    }

    printf("\nYour team now has %d points!", team_score);
    printf("\nThe opposing team has %d points.\n", opponent_score);

}

void end_game() {

    printf("The game has now ended!\n");
    printf("Your score was %d\n", team_score);
    printf("Your opponent's score was %d\n", opponent_score);
    printf("Thank you for playing this NFL Simulator!\n");

}
